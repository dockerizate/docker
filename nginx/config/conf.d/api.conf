#=============#
# RESTFUL API #
#=============#
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name  api.${VIRTUAL_HOST};

    gzip off;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;

    # send the CORS headers
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Origin'      'https://app.${VIRTUAL_HOST}';

    # set additional security headers
    add_header 'Cache-Control'                    'no-cache, no-store, must-revalidate';
    # add_header 'Content-Security-Policy'        'connect-src example.com';
    add_header 'Expires'                          '0';
    add_header 'Pragma'                           'no-cache';
    # add_header 'Strict-Transport-Security'        'max-age=31536000; includeSubDomains';
    add_header 'X-Content-Type-Options'           'nosniff';
    add_header 'X-Frame-Options'                  'DENY';
    add_header 'X-XSS-Protection'                 '1; mode=block';

    proxy_http_version  1.1;
    proxy_cache_bypass  $http_upgrade;

    location / {
      proxy_pass                http://${REST_API_HOST}:3000;

      # handle OPTIONS requests
      # @note: don't try to DRY out this "if" block, or you're gonna have a bad time.
      # @see: http://wiki.nginx.org/IfIsEvil
      # if ($request_method = 'OPTIONS') {
      #   add_header 'Access-Control-Allow-Credentials' 'true';
      #   add_header 'Access-Control-Allow-Headers'     'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,Keep-Alive,X-Requested-With,If-Modified-Since';
      #   add_header 'Access-Control-Allow-Methods'     'GET, DELETE, OPTIONS, POST, PUT';
      #   add_header 'Access-Control-Allow-Origin'      'https://app.dev.local';
      #   add_header 'Access-Control-Max-Age'           2592000;
      #   add_header 'Content-Length'                   0;
      #   add_header 'Content-Type'                     'text/plain charset=UTF-8';
      #   return 204;
      # }
    }

    location /upload {
        client_max_body_size 8m; # Setting size to 0 disables checking of client request body size
        proxy_request_buffering off;
        proxy_pass http://${REST_API_HOST}:3000/upload;
    }
}